//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_PoseLeft;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Pose p_default_PoseRight;
        
        private static SteamVR_Action_Vector2 p_default_Move;
        
        private static SteamVR_Action_Vector2 p_default_SmoothTurn;
        
        private static SteamVR_Action_Boolean p_default_Sprint;
        
        private static SteamVR_Action_Boolean p_default_Interact;
        
        private static SteamVR_Action_Boolean p_default_TechTree;
        
        private static SteamVR_Action_Boolean p_default_Inventory;
        
        private static SteamVR_Action_Boolean p_default_Jump;
        
        private static SteamVR_Action_Boolean p_default_TakeAll;
        
        private static SteamVR_Action_Boolean p_default_RotateBuildingLeft;
        
        private static SteamVR_Action_Boolean p_default_RotoateBuildingRight;
        
        private static SteamVR_Action_Boolean p_default_CycleHotbarLeft;
        
        private static SteamVR_Action_Boolean p_default_CycleHotbarRight;
        
        private static SteamVR_Action_Vector2 p_default_MenuJoystickSecondary;
        
        private static SteamVR_Action_Vector2 p_default_MenuJoystickPrimary;
        
        private static SteamVR_Action_Boolean p_default_Craft;
        
        private static SteamVR_Action_Boolean p_default_CraftFive;
        
        private static SteamVR_Action_Boolean p_default_CraftAll;
        
        private static SteamVR_Action_Boolean p_default_Transfer;
        
        private static SteamVR_Action_Boolean p_default_TransferHalf;
        
        private static SteamVR_Action_Boolean p_default_TransferAll;
        
        private static SteamVR_Action_Boolean p_default_UIPageLeft;
        
        private static SteamVR_Action_Boolean p_default_UIPageRight;
        
        private static SteamVR_Action_Boolean p_default_UIPageRightSecondary;
        
        private static SteamVR_Action_Boolean p_default_UIPageLeftSecondary;
        
        private static SteamVR_Action_Boolean p_default_ToggleMenu;
        
        private static SteamVR_Action_Boolean p_default_UISubmit;
        
        private static SteamVR_Action_Boolean p_default_UICancel;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_PoseLeft
        {
            get
            {
                return SteamVR_Actions.p_default_PoseLeft.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_PoseRight
        {
            get
            {
                return SteamVR_Actions.p_default_PoseRight.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Move
        {
            get
            {
                return SteamVR_Actions.p_default_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_SmoothTurn
        {
            get
            {
                return SteamVR_Actions.p_default_SmoothTurn.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Sprint
        {
            get
            {
                return SteamVR_Actions.p_default_Sprint.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Interact
        {
            get
            {
                return SteamVR_Actions.p_default_Interact.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TechTree
        {
            get
            {
                return SteamVR_Actions.p_default_TechTree.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Inventory
        {
            get
            {
                return SteamVR_Actions.p_default_Inventory.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Jump
        {
            get
            {
                return SteamVR_Actions.p_default_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TakeAll
        {
            get
            {
                return SteamVR_Actions.p_default_TakeAll.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_RotateBuildingLeft
        {
            get
            {
                return SteamVR_Actions.p_default_RotateBuildingLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_RotoateBuildingRight
        {
            get
            {
                return SteamVR_Actions.p_default_RotoateBuildingRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_CycleHotbarLeft
        {
            get
            {
                return SteamVR_Actions.p_default_CycleHotbarLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_CycleHotbarRight
        {
            get
            {
                return SteamVR_Actions.p_default_CycleHotbarRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_MenuJoystickSecondary
        {
            get
            {
                return SteamVR_Actions.p_default_MenuJoystickSecondary.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_MenuJoystickPrimary
        {
            get
            {
                return SteamVR_Actions.p_default_MenuJoystickPrimary.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Craft
        {
            get
            {
                return SteamVR_Actions.p_default_Craft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_CraftFive
        {
            get
            {
                return SteamVR_Actions.p_default_CraftFive.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_CraftAll
        {
            get
            {
                return SteamVR_Actions.p_default_CraftAll.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Transfer
        {
            get
            {
                return SteamVR_Actions.p_default_Transfer.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TransferHalf
        {
            get
            {
                return SteamVR_Actions.p_default_TransferHalf.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TransferAll
        {
            get
            {
                return SteamVR_Actions.p_default_TransferAll.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UIPageLeft
        {
            get
            {
                return SteamVR_Actions.p_default_UIPageLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UIPageRight
        {
            get
            {
                return SteamVR_Actions.p_default_UIPageRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UIPageRightSecondary
        {
            get
            {
                return SteamVR_Actions.p_default_UIPageRightSecondary.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UIPageLeftSecondary
        {
            get
            {
                return SteamVR_Actions.p_default_UIPageLeftSecondary.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ToggleMenu
        {
            get
            {
                return SteamVR_Actions.p_default_ToggleMenu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UISubmit
        {
            get
            {
                return SteamVR_Actions.p_default_UISubmit.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UICancel
        {
            get
            {
                return SteamVR_Actions.p_default_UICancel.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_PoseLeft,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_PoseRight,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_SmoothTurn,
                    SteamVR_Actions.default_Sprint,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_TechTree,
                    SteamVR_Actions.default_Inventory,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_TakeAll,
                    SteamVR_Actions.default_RotateBuildingLeft,
                    SteamVR_Actions.default_RotoateBuildingRight,
                    SteamVR_Actions.default_CycleHotbarLeft,
                    SteamVR_Actions.default_CycleHotbarRight,
                    SteamVR_Actions.default_MenuJoystickSecondary,
                    SteamVR_Actions.default_MenuJoystickPrimary,
                    SteamVR_Actions.default_Craft,
                    SteamVR_Actions.default_CraftFive,
                    SteamVR_Actions.default_CraftAll,
                    SteamVR_Actions.default_Transfer,
                    SteamVR_Actions.default_TransferHalf,
                    SteamVR_Actions.default_TransferAll,
                    SteamVR_Actions.default_UIPageLeft,
                    SteamVR_Actions.default_UIPageRight,
                    SteamVR_Actions.default_UIPageRightSecondary,
                    SteamVR_Actions.default_UIPageLeftSecondary,
                    SteamVR_Actions.default_ToggleMenu,
                    SteamVR_Actions.default_UISubmit,
                    SteamVR_Actions.default_UICancel,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_PoseLeft,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_PoseRight,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_SmoothTurn,
                    SteamVR_Actions.default_Sprint,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_TechTree,
                    SteamVR_Actions.default_Inventory,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_TakeAll,
                    SteamVR_Actions.default_RotateBuildingLeft,
                    SteamVR_Actions.default_RotoateBuildingRight,
                    SteamVR_Actions.default_CycleHotbarLeft,
                    SteamVR_Actions.default_CycleHotbarRight,
                    SteamVR_Actions.default_MenuJoystickSecondary,
                    SteamVR_Actions.default_MenuJoystickPrimary,
                    SteamVR_Actions.default_Craft,
                    SteamVR_Actions.default_CraftFive,
                    SteamVR_Actions.default_CraftAll,
                    SteamVR_Actions.default_Transfer,
                    SteamVR_Actions.default_TransferHalf,
                    SteamVR_Actions.default_TransferAll,
                    SteamVR_Actions.default_UIPageLeft,
                    SteamVR_Actions.default_UIPageRight,
                    SteamVR_Actions.default_UIPageRightSecondary,
                    SteamVR_Actions.default_UIPageLeftSecondary,
                    SteamVR_Actions.default_ToggleMenu,
                    SteamVR_Actions.default_UISubmit,
                    SteamVR_Actions.default_UICancel};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_PoseLeft,
                    SteamVR_Actions.default_PoseRight};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Sprint,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_TechTree,
                    SteamVR_Actions.default_Inventory,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_TakeAll,
                    SteamVR_Actions.default_RotateBuildingLeft,
                    SteamVR_Actions.default_RotoateBuildingRight,
                    SteamVR_Actions.default_CycleHotbarLeft,
                    SteamVR_Actions.default_CycleHotbarRight,
                    SteamVR_Actions.default_Craft,
                    SteamVR_Actions.default_CraftFive,
                    SteamVR_Actions.default_CraftAll,
                    SteamVR_Actions.default_Transfer,
                    SteamVR_Actions.default_TransferHalf,
                    SteamVR_Actions.default_TransferAll,
                    SteamVR_Actions.default_UIPageLeft,
                    SteamVR_Actions.default_UIPageRight,
                    SteamVR_Actions.default_UIPageRightSecondary,
                    SteamVR_Actions.default_UIPageLeftSecondary,
                    SteamVR_Actions.default_ToggleMenu,
                    SteamVR_Actions.default_UISubmit,
                    SteamVR_Actions.default_UICancel};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_SmoothTurn,
                    SteamVR_Actions.default_MenuJoystickSecondary,
                    SteamVR_Actions.default_MenuJoystickPrimary};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_SmoothTurn,
                    SteamVR_Actions.default_Sprint,
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_TechTree,
                    SteamVR_Actions.default_Inventory,
                    SteamVR_Actions.default_Jump,
                    SteamVR_Actions.default_TakeAll,
                    SteamVR_Actions.default_RotateBuildingLeft,
                    SteamVR_Actions.default_RotoateBuildingRight,
                    SteamVR_Actions.default_CycleHotbarLeft,
                    SteamVR_Actions.default_CycleHotbarRight,
                    SteamVR_Actions.default_MenuJoystickSecondary,
                    SteamVR_Actions.default_MenuJoystickPrimary,
                    SteamVR_Actions.default_Craft,
                    SteamVR_Actions.default_CraftFive,
                    SteamVR_Actions.default_CraftAll,
                    SteamVR_Actions.default_Transfer,
                    SteamVR_Actions.default_TransferHalf,
                    SteamVR_Actions.default_TransferAll,
                    SteamVR_Actions.default_UIPageLeft,
                    SteamVR_Actions.default_UIPageRight,
                    SteamVR_Actions.default_UIPageRightSecondary,
                    SteamVR_Actions.default_UIPageLeftSecondary,
                    SteamVR_Actions.default_ToggleMenu,
                    SteamVR_Actions.default_UISubmit,
                    SteamVR_Actions.default_UICancel};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_PoseLeft = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/PoseLeft")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_PoseRight = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/PoseRight")));
            SteamVR_Actions.p_default_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Move")));
            SteamVR_Actions.p_default_SmoothTurn = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/SmoothTurn")));
            SteamVR_Actions.p_default_Sprint = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Sprint")));
            SteamVR_Actions.p_default_Interact = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Interact")));
            SteamVR_Actions.p_default_TechTree = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TechTree")));
            SteamVR_Actions.p_default_Inventory = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Inventory")));
            SteamVR_Actions.p_default_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Jump")));
            SteamVR_Actions.p_default_TakeAll = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TakeAll")));
            SteamVR_Actions.p_default_RotateBuildingLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/RotateBuildingLeft")));
            SteamVR_Actions.p_default_RotoateBuildingRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/RotoateBuildingRight")));
            SteamVR_Actions.p_default_CycleHotbarLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/CycleHotbarLeft")));
            SteamVR_Actions.p_default_CycleHotbarRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/CycleHotbarRight")));
            SteamVR_Actions.p_default_MenuJoystickSecondary = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/MenuJoystickSecondary")));
            SteamVR_Actions.p_default_MenuJoystickPrimary = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/MenuJoystickPrimary")));
            SteamVR_Actions.p_default_Craft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Craft")));
            SteamVR_Actions.p_default_CraftFive = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/CraftFive")));
            SteamVR_Actions.p_default_CraftAll = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/CraftAll")));
            SteamVR_Actions.p_default_Transfer = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Transfer")));
            SteamVR_Actions.p_default_TransferHalf = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TransferHalf")));
            SteamVR_Actions.p_default_TransferAll = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TransferAll")));
            SteamVR_Actions.p_default_UIPageLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UIPageLeft")));
            SteamVR_Actions.p_default_UIPageRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UIPageRight")));
            SteamVR_Actions.p_default_UIPageRightSecondary = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UIPageRightSecondary")));
            SteamVR_Actions.p_default_UIPageLeftSecondary = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UIPageLeftSecondary")));
            SteamVR_Actions.p_default_ToggleMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ToggleMenu")));
            SteamVR_Actions.p_default_UISubmit = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UISubmit")));
            SteamVR_Actions.p_default_UICancel = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UICancel")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
